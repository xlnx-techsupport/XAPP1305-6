
####################################################################################
# Generated by Vivado 2018.2 built on 'Thu Jun 14 20:02:38 MDT 2018' by 'xbuild'
# Command Used: write_xdc ../../pl_ethernet_sgmii/TCL/constrs.xdc
####################################################################################


####################################################################################
# Constraints from file : 'PL_1000BASE_X_axi_eth_0_0_board.xdc'
####################################################################################

#--------------------Physical Constraints-----------------


####################################################################################
# Constraints from file : 'bd_2c73_eth_buf_0_board.xdc'
####################################################################################

#--------------------Physical Constraints-----------------


####################################################################################
# Constraints from file : 'bd_2c73_mac_0_board.xdc'
####################################################################################

#--------------------Physical Constraints-----------------



####################################################################################
# Constraints from file : 'bd_2c73_mac_0.xdc'
####################################################################################


# PART is zynquplus xczu9egffvb1156

############################################################
# Clock Period Constraints                                 #
############################################################

#
####
#######
##########
#############
#################
#BLOCK CONSTRAINTS

############################################################
# None
############################################################


#
####
#######
##########
#############
#################
#CORE CONSTRAINTS



############################################################
# Crossing of Clock Domain Constraints: please do not edit #
############################################################

# control signal is synced separately so we want a max delay to ensure the signal has settled by the time the control signal has passed through the synch
current_instance PL_1000BASE_X_i/axi_eth_0/inst/mac/inst
set_max_delay -datapath_only -from [get_cells {bd_2c73_mac_0_core/flow/rx_pause/pause*to_tx_reg[*]}] -to [get_cells bd_2c73_mac_0_core/flow/tx_pause/count_set*reg] 32.000
set_max_delay -datapath_only -from [get_cells {bd_2c73_mac_0_core/flow/rx_pause/pause*to_tx_reg[*]}] -to [get_cells {bd_2c73_mac_0_core/flow/tx_pause/pause_count*reg[*]}] 32.000
set_max_delay -datapath_only -from [get_cells bd_2c73_mac_0_core/flow/rx_pause/pause_req_to_tx_int_reg] -to [get_cells bd_2c73_mac_0_core/flow/tx_pause/sync_good_rx/data_sync_reg0] 6.000


# set a false path for the clock path from the address filter dist rams
# the paths we care about timing are either the write interface OR the read interface
# this path is from the write to the read which should be ignored
set_false_path -from [get_cells -hierarchical -filter {NAME =~ *bd_2c73_mac_0_core/addr_filter_top/address_filter_inst/*/DP}] -to [get_cells -hierarchical -filter {NAME =~ *bd_2c73_mac_0_core/addr_filter_top/address_filter_inst/*addr*/bit_match*reg[*]}]

# false path due to synced control path
set_max_delay -datapath_only -from [get_cells {bd_2c73_mac_0_core/*statistics_counters/rd_data_ref_reg[*]}] -to [get_cells {bd_2c73_mac_0_core/*statistics_counters/ip2bus_data_reg[*]}] 6.000
set_max_delay -datapath_only -from [get_cells bd_2c73_mac_0_core/*statistics_counters/response_toggle_reg] -to [get_cells bd_2c73_mac_0_core/*statistics_counters/sync_response/data_sync_reg0] 6.000
set_max_delay -datapath_only -from [get_cells bd_2c73_mac_0_core/*statistics_counters/request_toggle_reg] -to [get_cells bd_2c73_mac_0_core/*statistics_counters/sync_request/data_sync_reg0] 6.000


############################################################
# Ignore paths to resync flops
############################################################
set_false_path -to [get_pins -hier -filter {NAME =~ */async_rst*/PRE}]
set_false_path -to [get_pins -hier -filter {NAME =~ */async_rst*/CLR}]

set_max_delay -datapath_only -from [get_cells bd_2c73_mac_0_core/addr_filter_top/addr_regs.promiscuous_mode_reg_reg] -to [get_cells bd_2c73_mac_0_core/addr_filter_top/address_filter_inst/resync_promiscuous_mode/data_sync_reg0] 6.000
set_max_delay -datapath_only -from [get_cells {bd_2c73_mac_0_core/addr_filter_top/addr_regs.filter_enable_reg_reg[*]}] -to [get_cells {bd_2c73_mac_0_core/addr_filter_top/address_filter_inst/address_filters[*].sync_enable/data_sync_reg0}] 6.000
set_max_delay -datapath_only -from [get_cells bd_2c73_mac_0_core/*managen/conf/update_pause_ad_int_reg] -to [get_cells bd_2c73_mac_0_core/addr_filter_top/address_filter_inst/sync_update/data_sync_reg0] 6.000

# the mdio interface is clocked from the axi clock but the clock is so slow is can be considered to be data
# the data related outputs are output on the falling edge of the MDC output so both can simply be considered to be multicycle paths
set_multicycle_path -setup -from [get_cells bd_2c73_mac_0_core/*managen/mdio_enabled.miim_clk_int_reg] -through [get_ports -scoped_to_current_instance mdc] 10
set_multicycle_path -hold -from [get_cells bd_2c73_mac_0_core/*managen/mdio_enabled.miim_clk_int_reg] -through [get_ports -scoped_to_current_instance mdc] 9
set_multicycle_path -setup -from [get_cells bd_2c73_mac_0_core/*managen/mdio_enabled.phy/enable_reg_reg] -through [get_ports -scoped_to_current_instance mdc] 10
set_multicycle_path -hold -from [get_cells bd_2c73_mac_0_core/*managen/mdio_enabled.phy/enable_reg_reg] -through [get_ports -scoped_to_current_instance mdc] 9
set_multicycle_path -setup -from [get_cells bd_2c73_mac_0_core/*managen/mdio_enabled.phy/mdio*reg] -through [get_ports -scoped_to_current_instance mdio_o] 10
set_multicycle_path -hold -from [get_cells bd_2c73_mac_0_core/*managen/mdio_enabled.phy/mdio*reg] -through [get_ports -scoped_to_current_instance mdio_o] 9
set_multicycle_path -setup -from [get_cells bd_2c73_mac_0_core/*managen/mdio_enabled.phy/mdio*reg] -through [get_ports -scoped_to_current_instance mdio_t] 10
set_multicycle_path -hold -from [get_cells bd_2c73_mac_0_core/*managen/mdio_enabled.phy/mdio*reg] -through [get_ports -scoped_to_current_instance mdio_t] 9
# mdio has timing implications but slow interface so relaxed
set_false_path -to [get_cells -hier -filter {NAME =~ *managen/mdio_enabled.phy/mdio_in_reg1_reg}]





####################################################################################
# Constraints from file : 'bd_2c73_pcs_pma_0_gt.xdc'
####################################################################################

#------------------------------------------------------------------------------
#  (c) Copyright 2013-2015 Xilinx, Inc. All rights reserved.
#
#  This file contains confidential and proprietary information
#  of Xilinx, Inc. and is protected under U.S. and
#  international copyright and other intellectual property
#  laws.
#
#  DISCLAIMER
#  This disclaimer is not a license and does not grant any
#  rights to the materials distributed herewith. Except as
#  otherwise provided in a valid license issued to you by
#  Xilinx, and to the maximum extent permitted by applicable
#  law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
#  WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
#  AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
#  BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
#  INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
#  (2) Xilinx shall not be liable (whether in contract or tort,
#  including negligence, or under any other theory of
#  liability) for any loss or damage of any kind or nature
#  related to, arising under or in connection with these
#  materials, including for any direct, or any indirect,
#  special, incidental, or consequential loss or damage
#  (including loss of data, profits, goodwill, or any type of
#  loss or damage suffered as a result of any action brought
#  by a third party) even if such damage or loss was
#  reasonably foreseeable or Xilinx had been advised of the
#  possibility of the same.
#
#  CRITICAL APPLICATIONS
#  Xilinx products are not designed or intended to be fail-
#  safe, or for use in any application requiring fail-safe
#  performance, such as life-support or safety devices or
#  systems, Class III medical devices, nuclear facilities,
#  applications related to the deployment of airbags, or any
#  other applications that could lead to death, personal
#  injury, or severe property or environmental damage
#  (individually and collectively, "Critical
#  Applications"). Customer assumes the sole risk and
#  liability of any use of Xilinx products in Critical
#  Applications, subject only to applicable laws and
#  regulations governing limitations on product liability.
#
#  THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
#  PART OF THIS FILE AT ALL TIMES.
#------------------------------------------------------------------------------


# UltraScale FPGAs Transceivers Wizard IP core-level XDC file
# ----------------------------------------------------------------------------------------------------------------------

# Commands for enabled transceiver GTHE4_CHANNEL_X0Y12
# ----------------------------------------------------------------------------------------------------------------------

# Set case analysis constraint, used in this configuration to limit timing analysis to the known runtime TXOUTCLK source
# selection since the CPLL calibration block controls the TXOUTCLKSEL port dynamically
current_instance -quiet
current_instance PL_1000BASE_X_i/axi_eth_0/inst/pcs_pma/inst/pcs_pma_block_i/transceiver_inst/bd_2c73_pcs_pma_0_gt_i/inst
set_case_analysis 1 [get_pins -hierarchical -filter {NAME =~ *gen_channel_container[3].*gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST/TXOUTCLKSEL[2]}]
set_case_analysis 0 [get_pins -hierarchical -filter {NAME =~ *gen_channel_container[3].*gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST/TXOUTCLKSEL[1]}]
set_case_analysis 1 [get_pins -hierarchical -filter {NAME =~ *gen_channel_container[3].*gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST/TXOUTCLKSEL[0]}]
# Set case analysis constraint, used in this configuration to limit timing analysis to the known runtime RXOUTCLK source
# selection since the CPLL calibration block controls the RXOUTCLKSEL port dynamically
set_case_analysis 0 [get_pins -hierarchical -filter {NAME =~ *gen_channel_container[3].*gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST/RXOUTCLKSEL[2]}]
set_case_analysis 1 [get_pins -hierarchical -filter {NAME =~ *gen_channel_container[3].*gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST/RXOUTCLKSEL[1]}]
set_case_analysis 0 [get_pins -hierarchical -filter {NAME =~ *gen_channel_container[3].*gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST/RXOUTCLKSEL[0]}]

# Channel primitive location constraint
set_property LOC GTHE4_CHANNEL_X1Y12 [get_cells -hierarchical -filter {NAME =~ *gen_channel_container[3].*gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST}]

# Channel primitive serial data pin location constraints
# (Provided as comments for your reference. The channel primitive location constraint is sufficient.)
#set_property package_pin E32 [get_ports gthrxn_in[0]]
#set_property package_pin E31 [get_ports gthrxp_in[0]]
#set_property package_pin F30 [get_ports gthtxn_out[0]]
#set_property package_pin F29 [get_ports gthtxp_out[0]]

# CPLL calibration block constraints
create_clock -period 8.000 [get_pins -hierarchical -filter {NAME =~ *gen_cpll_cal_inst[0].*bufg_gt_txoutclkmon_inst/O}]
set_false_path -from [get_cells -hierarchical -filter {NAME =~ *gen_cpll_cal_inst[0].*U_TXOUTCLK_FREQ_COUNTER/testclk_cnt_reg*}] -to [get_cells -hierarchical -filter {NAME =~ *gen_cpll_cal_inst[0].*U_TXOUTCLK_FREQ_COUNTER/freq_cnt_o_reg*}] -quiet
set_false_path -from [get_cells -hierarchical -filter {NAME =~ *gen_cpll_cal_inst[0].*U_TXOUTCLK_FREQ_COUNTER/state_reg*}] -to [get_cells -hierarchical -filter {NAME =~ *gen_cpll_cal_inst[0].*U_TXOUTCLK_FREQ_COUNTER/tstclk_rst_dly1_reg*}] -quiet
set_false_path -from [get_cells -hierarchical -filter {NAME =~ *gen_cpll_cal_inst[0].*U_TXOUTCLK_FREQ_COUNTER/state_reg*}] -to [get_cells -hierarchical -filter {NAME =~ *gen_cpll_cal_inst[0].*U_TXOUTCLK_FREQ_COUNTER/testclk_en_dly1_reg*}] -quiet


set_false_path -through [get_pins -filter REF_PIN_NAME=~*Q -of_objects [get_cells -hierarchical -filter {NAME =~ *gen_pwrgood_delay_inst[0].delay_powergood_inst/gen_powergood_delay.pwr_on_fsm*}]] -quiet
set_case_analysis 1 [get_pins -filter REF_PIN_NAME=~*Q -of_objects [get_cells -hierarchical -filter {NAME =~ *gen_pwrgood_delay_inst[0].delay_powergood_inst/gen_powergood_delay.pwr_on_fsm*}]] -quiet

set_property CLK_COR_MAX_LAT 36 [get_cells -hierarchical -filter {NAME =~ *gen_channel_container[3].*gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST}]
set_property CLK_COR_MIN_LAT 32 [get_cells -hierarchical -filter {NAME =~ *gen_channel_container[3].*gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST}]

# False path constraints
# ----------------------------------------------------------------------------------------------------------------------

set_false_path -to [get_cells -hierarchical -filter {NAME =~ *bit_synchronizer*inst/i_in_meta_reg}]

##set_false_path -to [get_cells -hierarchical -filter {NAME =~ *reset_synchronizer*inst/rst_in_*_reg}]
set_false_path -to [get_pins -filter REF_PIN_NAME=~*D -of_objects [get_cells -hierarchical -filter {NAME =~ *reset_synchronizer*inst/rst_in_meta*}]]
set_false_path -to [get_pins -filter REF_PIN_NAME=~*PRE -of_objects [get_cells -hierarchical -filter {NAME =~ *reset_synchronizer*inst/rst_in_meta*}]]
set_false_path -to [get_pins -filter REF_PIN_NAME=~*PRE -of_objects [get_cells -hierarchical -filter {NAME =~ *reset_synchronizer*inst/rst_in_sync1*}]]
set_false_path -to [get_pins -filter REF_PIN_NAME=~*PRE -of_objects [get_cells -hierarchical -filter {NAME =~ *reset_synchronizer*inst/rst_in_sync2*}]]
set_false_path -to [get_pins -filter REF_PIN_NAME=~*PRE -of_objects [get_cells -hierarchical -filter {NAME =~ *reset_synchronizer*inst/rst_in_sync3*}]]
set_false_path -to [get_pins -filter REF_PIN_NAME=~*PRE -of_objects [get_cells -hierarchical -filter {NAME =~ *reset_synchronizer*inst/rst_in_out*}]]
set_false_path -to [get_pins -filter REF_PIN_NAME=~*CLR -of_objects [get_cells -hierarchical -filter {NAME =~ *reset_synchronizer*inst/rst_in_meta*}]]
set_false_path -to [get_pins -filter REF_PIN_NAME=~*CLR -of_objects [get_cells -hierarchical -filter {NAME =~ *reset_synchronizer*inst/rst_in_sync1*}]]
set_false_path -to [get_pins -filter REF_PIN_NAME=~*CLR -of_objects [get_cells -hierarchical -filter {NAME =~ *reset_synchronizer*inst/rst_in_sync2*}]]
set_false_path -to [get_pins -filter REF_PIN_NAME=~*CLR -of_objects [get_cells -hierarchical -filter {NAME =~ *reset_synchronizer*inst/rst_in_sync3*}]]
set_false_path -to [get_pins -filter REF_PIN_NAME=~*CLR -of_objects [get_cells -hierarchical -filter {NAME =~ *reset_synchronizer*inst/rst_in_out*}]]



####################################################################################
# Constraints from file : 'bd_2c73_pcs_pma_0_board.xdc'
####################################################################################

#--------------------Physical Constraints-----------------


####################################################################################
# Constraints from file : 'bd_2c73_pcs_pma_0_clocks.xdc'
####################################################################################



#-----------------------------------------------------------
# PCS/PMA Clock period Constraints: please do not relax    -
#-----------------------------------------------------------



####################################################################################
# Constraints from file : 'PL_1000BASE_X_axi_eth_0_dma_0.xdc'
####################################################################################

# file: PL_1000BASE_X_axi_eth_0_dma_0.xdc
# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.


current_instance -quiet
current_instance PL_1000BASE_X_i/axi_eth_0_dma/U0
set_false_path -to [get_pins -hier *cdc_to*/D]



####################################################################################
# Constraints from file : 'PL_1000BASE_X_clk_wiz_0_0_board.xdc'
####################################################################################

#--------------------Physical Constraints-----------------



####################################################################################
# Constraints from file : 'PL_1000BASE_X_clk_wiz_0_0.xdc'
####################################################################################


# file: PL_1000BASE_X_clk_wiz_0_0.xdc
#
# (c) Copyright 2008 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.
#

# Input clock periods. These duplicate the values entered for the
# input clocks. You can use these to time your system. If required
# commented constraints can be used in the top level xdc
#----------------------------------------------------------------
# Connect to input port when clock capable pin is selected for input
current_instance -quiet
current_instance PL_1000BASE_X_i/clk_wiz_0/inst
create_clock -period 13.335 [get_ports -scoped_to_current_instance clk_in1]
set_input_jitter [get_clocks -of_objects [get_ports -scoped_to_current_instance clk_in1]] 0.133


set_property PHASESHIFT_MODE LATENCY [get_cells -hierarchical *adv*]


####################################################################################
# Constraints from file : 'PL_1000BASE_X_ps_rst_75_0_board.xdc'
####################################################################################

#--------------------Physical Constraints-----------------



####################################################################################
# Constraints from file : 'PL_1000BASE_X_ps_rst_75_0.xdc'
####################################################################################


# file: PL_1000BASE_X_ps_rst_75_0.xdc
# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.

current_instance -quiet
current_instance PL_1000BASE_X_i/zynq_ps/ps_rst_75/U0
set_false_path -to [get_pins -hier *cdc_to*/D]


####################################################################################
# Constraints from file : 'PL_1000BASE_X_zusp_ps_0.xdc'
####################################################################################

##############################PS XDC#########################################
############################################################################
##
##  Xilinx, Inc. 2006            www.xilinx.com
############################################################################
##  File name :       psu_constraints.xdc
##
##  Details :     Constraints file
##                    FPGA family:       zynq
##                    FPGA:              PROD-2
##                    Device Size:       xczu9eg
##                    Package:           ffvb1156
##                    Speedgrade:        -2
##
##
############################################################################
############################################################################
############################################################################
# Clock constraints                                                        #
############################################################################
current_instance -quiet
current_instance PL_1000BASE_X_i/zynq_ps/zusp_ps/inst
create_clock -period 13.334 -name clk_pl_0 [get_pins {PS8_i/PLCLK[0]}]



current_instance -quiet
set_property DONT_TOUCH true [get_cells PL_1000BASE_X_i/zynq_ps/zusp_ps/inst/PS8_i]


####################################################################################
# Constraints from file : 'PL_1000BASE_X_axi_timer_1_0.xdc'
####################################################################################


# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.


current_instance PL_1000BASE_X_i/other_perph/axi_timer_1/U0
set_false_path -to [get_pins -hier *cdc_to*/D]



####################################################################################
# Constraints from file : 'constrs.xdc'
####################################################################################


#sfp0
current_instance -quiet
set_property PACKAGE_PIN A12 [get_ports {sfp_tx_dis[0]}]
set_property IOSTANDARD LVCMOS25 [get_ports {sfp_tx_dis[0]}]
set_property PACKAGE_PIN E4 [get_ports s*_txp]
set_property PACKAGE_PIN D2 [get_ports s*_rxp]

# FMC HPC0 txp
#FMC_HPC0_DP0_C2M_P -> g4
#FMC_HPC0_DP1_C2M_P -> h6
#FMC_HPC0_DP2_C2M_P -> f6
#FMC_HPC0_DP3_C2M_P -> k6
#FMC_HPC0_DP4_C2M_P -> m6
#FMC_HPC0_DP5_C2M_P -> p6
#FMC_HPC0_DP6_C2M_P -> r4
#FMC_HPC0_DP7_C2M_P -> n4

#USER_MGT_SI570_CLOCK2_C_P
set_property PACKAGE_PIN C8 [get_ports mgt_clk_clk_p]
# User SMA MGT Clock
#set_property PACKAGE_PIN N27     [get_ports mgt_clk_clk_p]
# FMC_HPC0_GBTCLK1_M2C_C_P  B20 Clock
#set_property PACKAGE_PIN  L8     [get_ports mgt_clk_clk_p]

#set_property IOSTANDARD LVCMOS25 [get_ports mgt_clk_*]
create_clock -period 8.000 -name gt_ref_clk [get_ports mgt_clk_clk_p]

#LED 2 and 3
# led 0 .. 7 => ag14, af13, ae13, aj14, aj15, ah13, ah14, al12
set_property IOSTANDARD LVCMOS33 [get_ports *led]
set_property PACKAGE_PIN AG14 [get_ports axil_reset_led]
#set_property PACKAGE_PIN    af13  [get_ports axil_reset_led]
set_property PACKAGE_PIN AE13 [get_ports {axi_lite_clk_led[0]}]
#set_property PACKAGE_PIN    aj14  [get_ports axi_lite_clk_led]
set_property PACKAGE_PIN AJ15 [get_ports {mgt_clk_led[0]}]
#set_property PACKAGE_PIN    ah13  [get_ports mgt_clk_led]
set_property PACKAGE_PIN AH14 [get_ports {rx_clk_led[0]}]
#set_property IOSTANDARD LVCMOS25 [get_ports axil_reset_led]
#set_property IOSTANDARD LVCMOS33 [get_ports axi_lite_clk_led]
#set_property IOSTANDARD LVCMOS33 [get_ports mgt_clk_led]


## Dip Switches
### GPIO_DIP_SW0 .. 7 AN14, AP14, AM14, AN13, AN12, AP12, AL13, AK13


## GPIO Switches
### GPIO_SW_E S N W C => AE14 AE15 AG15 AF15 AG13



####################################################################################
# Constraints from file : 'bd_2c73_eth_buf_0.xdc'
####################################################################################



# Single bit CDC synchronisers to set/clear interrupt signals
# -----------------------------------------------------------

# The timing of these single bits is judged to be none critical so false_path is used instead of
# max_delay.  Interrupts will fire when the false_path signals cross the clock domain; using a
# max_delay constraint may make interrupts fire a few ns earlier, but since these are used by
# SW, a few ns makes little difference.

current_instance PL_1000BASE_X_i/axi_eth_0/inst/eth_buf/U0
set_false_path -from [get_cells *TXCLCLK2AXICLK_ISR_1/ClkASignalToggle_reg] -to [get_cells *TXCLCLK2AXICLK_ISR_1/data_sync/data_sync0_i]
set_false_path -from [get_cells *TXCLCLK2AXICLK_ISR_5/ClkASignalToggle_reg] -to [get_cells *TXCLCLK2AXICLK_ISR_5/data_sync/data_sync0_i]
#set_false_path -from [get_ports {EMAC_RX_DCM_LOCKED_INT}] # May be needed in 1000BASE-X/SGMII mode or always optimised away in the system?
#set_false_path -from [get_ports {EMAC_RESET_DONE_INT}]    # Always being optimised away in the system?
set_false_path -from [get_cells *RXCLCLK2AXICLK_INTRPT0/ClkASignalToggle_reg] -to [get_cells *RXCLCLK2AXICLK_INTRPT0/data_sync/data_sync0_i]
set_false_path -from [get_cells *RXCLCLK2AXICLK_INTRPT1/ClkASignalToggle_reg] -to [get_cells *RXCLCLK2AXICLK_INTRPT1/data_sync/data_sync0_i]
set_false_path -from [get_cells *RXCLCLK2AXICLK_INTRPT2/ClkASignalToggle_reg] -to [get_cells *RXCLCLK2AXICLK_INTRPT2/data_sync/data_sync0_i]

# Tx Pause value passed from AXI-Lite domain into the MAC Tx - pause_req / pause_value
# ------------------------------------------------------------------------------------

# This is very standard bus crossings methodology.  When the bus is updated (clk_a2b_bus_reg[*]) in
# its source clock domain, a single bit is toggled (ClkASignalToggle_reg); this single bit is
# passed across the clock domain and its change of state is detected in the new clock domain.  When
# this occurs, the bus, held stable on the source clock domain, can be sampled in the new clock
# domain safely.  The rules for this are:
#   * We are not concerned with how long it takes for the toggle bit to cross the clock domain so
#     it is false_path -ed
#   * However, we NEED the bus to be stable when sampled, so we need to use a max_delay on all bits
#     so we know that all bits of the bus have arrived at the destination sampling flip-flops when
#     sampled.  The minimum route delay for the toggle signal is here assumed to be 0 ns for the
#     CDC route, then we have 5 synchronisation flip-flops in the new clock domain before
#     combinatorial toggle detection is performed (requiring one further clock period).  The first
#     of these 5 sync flip-flops could be transparant (change to new logic state immediately), so we
#     have 4 clock periods remaining for the synchroniser, plus one for the toggle detection = 5
#     clock periods. So maximum route delay (worst case) can be 5 x 8 ns = 40 ns (minus the setup
#     requirement of the sampling flip-flop) for the circuit to guarantee that it will work. Here I
#     used 32 ns to provide more than enough margin (8ns) for the flip-flop setup requirement.
#
#     So all bits of clk_a2b_bus_reg[*] will be routed in < 32 ns and the circuit will be reliable.
#     Were this unconstrainted, and if the router sent just one of these bits around the FPGA and
#     its unconstrainted route was greated than approximately 40 ns, this circuit could sample an
#     incorrect value.

set_false_path -from [get_cells *TX_PAUSE_FRAME_CROSS_I/ClkASignalToggle_reg] -to [get_cells *TX_PAUSE_FRAME_CROSS_I/data_sync/data_sync0_i]
set_max_delay -datapath_only -from [get_cells {*TX_PAUSE_FRAME_CROSS_I/clk_a2b_bus_reg[*]}] -to [get_cells -hier -regexp .*TX_PAUSE_FRAME_CROSS_I.*ClkBAxiEthBaEClkCrsBusOut_reg.* -filter IS_SEQUENTIAL==\"1\"] 8.000

# Configuration logic CDC
# -----------------------

# Standard bus crossings methodology again (see above comments for Tx Pause).  Again the control
# (toggle) signal is false-path ed, but the static bus to be sampled is max_delay constrained.  This
# is also the same calculation as above (5 clock periods max delay into the new clock domain).  Note
# that here, There are 3 different toggle control signals: all from the AXI-Lite clock domain into:
#    * TEMAC Rx clock domain (max 125MHz)
#    * TEMAC Tx clock domain (max 125MHz)
#    * AXI-S  (assumed to be max 125 MHz) - this seems to be stripped through so is commented out

set_false_path -from [get_cells *gen_sample_rx_mac_config/ClkASignalToggle_reg] -to [get_cells *gen_sample_rx_mac_config/data_sync/data_sync0_i]
set_false_path -from [get_cells *gen_sample_tx_mac_config/ClkASignalToggle_reg] -to [get_cells *gen_sample_tx_mac_config/data_sync/data_sync0_i]
#set_false_path -from [get_cells {*sample_axi_str_config/ClkASignalToggle_reg}]   -to [get_cells {*sample_axi_str_config/data_sync/data_sync0_i}]

# Adding a generic false path and a generic max delay  constraint for remaining paths
set_max_delay -datapath_only -from [get_cells -of [all_fanin -flat [get_pins -hier -regexp .*/ClkBAxiEthBClkCrsBusOut_reg.*D]] -filter {IS_SEQUENTIAL=="1" && NAME !~ "*ClkBAxiEthBClkCrsBusOut*"}] -to [get_pins -hier -regexp .*/ClkBAxiEthBClkCrsBusOut_reg.*D] 8.000

##### WARNING: [Designutils 20-1567] Use of 'set_false_path' with '-hold' is not supported by synthesis. The constraint will not be passed to synthesis.
#### set_false_path -hold -to [get_pins -hier -regexp {.*/ClkBAxiEthBClkCrsBusOut_reg.*D}]


set_false_path -to [get_pins -hier -regexp .*/data_sync0_i/D]

# Ignore paths to the asynchronous reset port of the reset synchronization module
# -------------------------------------------------------------------------------
set_false_path -to [get_pins -hier -filter {NAME =~ */async_rst*/PRE}]

# Rx data path CDC crossing
# -------------------------

# The following constraints are for gray coded busses.  Gray codes work by having only a single bit
# that changes per clock cycle: therefore all but 1 bit should be stable for sample at any time on
# the new clock domain. The single bit causes some uncertainty but only by 1 (equivalent binary
# value) - so we may sample either the very latest value, or at worst case, the previous value.

# However, we have to ensure that the route delay for all bits is < 1 clock period; if there were
# no max_delay constraints on this bus, it is possible that 1 single bit of this bus could be
# routed round the FPGA and have a routing delay > 1 clock period.  If this were the case, then
# this bit, arriving late, could coincide with the next bit changing; on the sample side, 2 bits
# could have changed at once giving 2 bits of uncertainty and the equivalent binary value is
# no-longer reliable.  Adding the max_delay constraint here to be < 1 clock period will ensure that
# this gray code crossing is reliable.

set_max_delay -datapath_only -from [get_cells {*RCV_INTFCE_I/RX_AXISTREAM_IF_I/rxs_mem_last_read_out_ptr_gray_d1_reg[*]}] -to [get_cells {*RCV_INTFCE_I/NO_INCLUDE_RX_VLAN.RX_EMAC_IF_I/SYNC_RXS_LAST_READ_GRAY_PROCESS[*].SYNC_RXS_LAST_READ_GRAY/data_sync0_i}] 8.000
set_max_delay -datapath_only -from [get_cells {*RCV_INTFCE_I/RX_AXISTREAM_IF_I/rxd_mem_last_read_out_ptr_gray_d1_reg[*]}] -to [get_cells {*RCV_INTFCE_I/NO_INCLUDE_RX_VLAN.RX_EMAC_IF_I/SYNC_RXD_LAST_READ_GRAY_PROCESS[*].SYNC_RXD_LAST_READ_GRAY/data_sync0_i}] 8.000

set_false_path -through [get_nets -hier -regexp .*speed_is_10_100.*]





####################################################################################
# Constraints from file : 'bd_2c73_mac_0_clocks.xdc'
####################################################################################


############################################################
# Obtain input clocks from top level XDC                   #
############################################################


#
####
#######
##########
#############
#################
#BLOCK CONSTRAINTS

############################################################
# Crossing of Clock Domain Constraints: please do not edit #
############################################################

# set a false path for the IPIF
current_instance -quiet
current_instance PL_1000BASE_X_i/axi_eth_0/inst/mac/inst
set_max_delay -datapath_only -from [get_cells {axi4_lite_ipif/axi4_lite_ipif_top_wrapper/axi_lite_top/*/bus2ip_addr_i_reg[*]}] -to [get_clocks -of_objects [get_ports -scoped_to_current_instance gtx_clk]] 6.000

# set a false path for the static config registers
set_false_path -from [get_cells {bd_2c73_mac_0_core/*managen/conf/int_*reg[*]}] -to [get_clocks -of_objects [get_ports -scoped_to_current_instance gtx_clk]]
set_false_path -from [get_cells bd_2c73_mac_0_core/*managen/conf/int_*reg] -to [get_clocks -of_objects [get_ports -scoped_to_current_instance gtx_clk]]



####################################################################################
# Constraints from file : 'bd_2c73_pcs_pma_0.xdc'
####################################################################################



current_instance -quiet
current_instance PL_1000BASE_X_i/axi_eth_0/inst/pcs_pma/inst
set_false_path -to [get_pins -hier -filter {name =~  *core_resets_i/pma_reset_pipe_reg*/PRE}]
set_false_path -to [get_pins -hier -filter {name =~  *core_resets_i/pma_reset_pipe*[0]/D}]





# Control Gray Code delay and skew across clock boundary
set_max_delay -datapath_only -from [get_cells -hier -filter {name =~  *pcs_pma_block_i/transceiver_inst/rx_elastic_buffer_inst/wr_addr_*_reg[*]}] -to [get_pins -hier -filter { name =~ *reclock_wr_addrgray[*].sync_wr_addrgray/data_sync*/D}] 16.000
set_max_delay -datapath_only -from [get_cells -hier -filter {name =~ *pcs_pma_block_i/transceiver_inst/rx_elastic_buffer_inst/rd_addr_*_reg[*]}] -to [get_pins -hier -filter { name =~ *reclock_rd_addrgray[*].sync_rd_addrgray/data_sync*/D}] 8.000

# Constrain between Distributed Memory (output data) and the 1st set of flip-flops
set_false_path -from [get_clocks -of [get_pins -hier -filter { name =~ */transceiver_inst/bd_2c73_pcs_pma_0_gt_i/inst/rxoutclk_out* }]] -to [get_pins -hierarchical -filter { name =~ *rx_elastic_buffer_inst/rd_data_reg*/D }]

set_false_path -from [get_pins -hierarchical -filter { name =~  *transceiver_inst/rx_elastic_buffer_inst/initialize_ram_complete_reg/C}] -to [get_pins -hierarchical -filter { name =~ *rx_elastic_buffer_inst/sync_initialize_ram_comp/data_sync_reg*/D }]


# false path constraints to async inputs coming directly to synchronizer
set_false_path -to [get_pins -hier -filter {name =~ *SYNC_*/data_sync*/D }]
set_false_path -to [get_pins -hier -filter {name =~ */sync_block_reset_done/data_sync_reg1/D }]
set_false_path -to [get_pins -hier -filter {name =~ *reset_sync*/PRE }]

set_false_path -to [get_pins -hier -filter {name =~ */*sync_speed_10*/data_sync*/D }]
set_false_path -to [get_pins -hier -filter {name =~ */*gen_sync_reset/reset_sync*/PRE }]
## timing for MDIO interface
set_max_delay -datapath_only -from [get_pins -hier -filter { name =~ */*MDIO_INTERFACE_*/MDIO_OUT_reg/C }] 6.000
set_max_delay -datapath_only -from [get_pins -hier -filter { name =~ */*MDIO_INTERFACE_*/MDIO_TRI_reg/C }] 6.000






####################################################################################
# Constraints from file : 'PL_1000BASE_X_axi_eth_0_dma_0_clocks.xdc'
####################################################################################

# file: PL_1000BASE_X_axi_eth_0_dma_0.xdc
# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.


####################################################################################
# Constraints from file : 'PL_1000BASE_X_auto_ds_2_clocks.xdc'
####################################################################################

###############################################################################################################
# Core-Level Timing Constraints for axi_dwidth_converter Component "PL_1000BASE_X_auto_ds_2"
###############################################################################################################
#
# This component is not configured to perform asynchronous clock-domain-crossing.
# No timing core-level constraints are needed.
# (Synchronous clock-domain-crossings, if any, remain covered by your system-level PERIOD constraints.)


####################################################################################
# Constraints from file : 'PL_1000BASE_X_auto_ds_1_clocks.xdc'
####################################################################################

###############################################################################################################
# Core-Level Timing Constraints for axi_dwidth_converter Component "PL_1000BASE_X_auto_ds_1"
###############################################################################################################
#
# This component is not configured to perform asynchronous clock-domain-crossing.
# No timing core-level constraints are needed.
# (Synchronous clock-domain-crossings, if any, remain covered by your system-level PERIOD constraints.)


####################################################################################
# Constraints from file : 'PL_1000BASE_X_auto_ds_0_clocks.xdc'
####################################################################################

###############################################################################################################
# Core-Level Timing Constraints for axi_dwidth_converter Component "PL_1000BASE_X_auto_ds_0"
###############################################################################################################
#
# This component is not configured to perform asynchronous clock-domain-crossing.
# No timing core-level constraints are needed.
# (Synchronous clock-domain-crossings, if any, remain covered by your system-level PERIOD constraints.)


####################################################################################
# Constraints from file : 'PL_1000BASE_X_auto_us_2_clocks.xdc'
####################################################################################

###############################################################################################################
# Core-Level Timing Constraints for axi_dwidth_converter Component "PL_1000BASE_X_auto_us_2"
###############################################################################################################
#
# This component is not configured to perform asynchronous clock-domain-crossing.
# No timing core-level constraints are needed.
# (Synchronous clock-domain-crossings, if any, remain covered by your system-level PERIOD constraints.)


####################################################################################
# Constraints from file : 'PL_1000BASE_X_auto_us_1_clocks.xdc'
####################################################################################

###############################################################################################################
# Core-Level Timing Constraints for axi_dwidth_converter Component "PL_1000BASE_X_auto_us_1"
###############################################################################################################
#
# This component is not configured to perform asynchronous clock-domain-crossing.
# No timing core-level constraints are needed.
# (Synchronous clock-domain-crossings, if any, remain covered by your system-level PERIOD constraints.)


####################################################################################
# Constraints from file : 'PL_1000BASE_X_auto_us_0_clocks.xdc'
####################################################################################

###############################################################################################################
# Core-Level Timing Constraints for axi_dwidth_converter Component "PL_1000BASE_X_auto_us_0"
###############################################################################################################
#
# This component is not configured to perform asynchronous clock-domain-crossing.
# No timing core-level constraints are needed.
# (Synchronous clock-domain-crossings, if any, remain covered by your system-level PERIOD constraints.)


####################################################################################
# Constraints from file : 'xpm_cdc_async_rst.tcl'
####################################################################################

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance PL_1000BASE_X_i/zynq_ps/ps_axi_periph/m00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_READ.read_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst
set_false_path -through [get_ports -scoped_to_current_instance src_arst] -to [all_registers]


# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance PL_1000BASE_X_i/zynq_ps/ps_axi_periph/m00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst
set_false_path -through [get_ports -scoped_to_current_instance src_arst] -to [all_registers]


# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance PL_1000BASE_X_i/zynq_ps/ps_axi_periph/m00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst
set_false_path -through [get_ports -scoped_to_current_instance src_arst] -to [all_registers]


# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance PL_1000BASE_X_i/zynq_ps/ps_axi_periph/m01_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_READ.read_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst
set_false_path -through [get_ports -scoped_to_current_instance src_arst] -to [all_registers]


# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance PL_1000BASE_X_i/zynq_ps/ps_axi_periph/m01_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst
set_false_path -through [get_ports -scoped_to_current_instance src_arst] -to [all_registers]


# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance PL_1000BASE_X_i/zynq_ps/ps_axi_periph/m01_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst
set_false_path -through [get_ports -scoped_to_current_instance src_arst] -to [all_registers]


# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance PL_1000BASE_X_i/zynq_ps/ps_axi_periph/m02_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_READ.read_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst
set_false_path -through [get_ports -scoped_to_current_instance src_arst] -to [all_registers]


# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance PL_1000BASE_X_i/zynq_ps/ps_axi_periph/m02_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst
set_false_path -through [get_ports -scoped_to_current_instance src_arst] -to [all_registers]


# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance PL_1000BASE_X_i/zynq_ps/ps_axi_periph/m02_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst
set_false_path -through [get_ports -scoped_to_current_instance src_arst] -to [all_registers]



####################################################################################
# Constraints from file : 'xpm_fifo_rst.tcl'
####################################################################################

# Scoped constraints for xpm_fifo
#if {([llength [ get_cells -hier *src_gray_ff_reg* -quiet]] > 0)} {
#set_false_path -from [get_pins -hierarchical -filter {NAME =~ *wr_rst_i_reg/C}] -to [get_pins -hierarchical -filter {NAME =~ *d_out_reg/D}]
#wr_rst_rd_reg[*]/D}]
#set_false_path -from [get_pins -hierarchical -filter {NAME =~ *rd_rst_d3_reg/C}] -to [get_pins -hierarchical -filter {NAME =~ *d_out_reg/D}]
#}



# Scoped constraints for xpm_fifo
#if {([llength [ get_cells -hier *src_gray_ff_reg* -quiet]] > 0)} {
#set_false_path -from [get_pins -hierarchical -filter {NAME =~ *wr_rst_i_reg/C}] -to [get_pins -hierarchical -filter {NAME =~ *d_out_reg/D}]
#wr_rst_rd_reg[*]/D}]
#set_false_path -from [get_pins -hierarchical -filter {NAME =~ *rd_rst_d3_reg/C}] -to [get_pins -hierarchical -filter {NAME =~ *d_out_reg/D}]
#}



# Scoped constraints for xpm_fifo
#if {([llength [ get_cells -hier *src_gray_ff_reg* -quiet]] > 0)} {
#set_false_path -from [get_pins -hierarchical -filter {NAME =~ *wr_rst_i_reg/C}] -to [get_pins -hierarchical -filter {NAME =~ *d_out_reg/D}]
#wr_rst_rd_reg[*]/D}]
#set_false_path -from [get_pins -hierarchical -filter {NAME =~ *rd_rst_d3_reg/C}] -to [get_pins -hierarchical -filter {NAME =~ *d_out_reg/D}]
#}




# Vivado Generated miscellaneous constraints 

#revert back to original instance
current_instance -quiet
